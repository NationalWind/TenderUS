generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Account {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String  @unique
  password String
  email    String?
  phone    String?
  role     Role
  FCMRegToken String?
}

model Profile {
  doc_id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username        String   @unique
  displayName     String

  avatarIcon      String
  pictures        String[]
  description     String

  longitude       Float
  latitude        Float

  identity        String
  age             Int
  interests       String[]
  groups          String[]

  isActive        Boolean
}

model Preference {
  doc_id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username        String   @unique
  ageMin          Int
  ageMax          Int
  maxDist         Float
  showMe          String
}


model Like {
  doc_id   String  @id @default(auto()) @map("_id") @db.ObjectId
  id       String
  likedID  String

  @@index(id)
}

model Pass_A {
  doc_id    String  @id @default(auto()) @map("_id") @db.ObjectId
  id        String
  passedID  String
}

/// user1 < user2
model Match {
  doc_id    String  @id @default(auto()) @map("_id") @db.ObjectId
  user1     String
  user2     String
  createdAt DateTime
  @@unique([user1, user2])
}

// user1 < user2
model Conversation {
  doc_id      String  @id @default(auto()) @map("_id") @db.ObjectId
  user1_user2 String @unique
  isRead      Boolean
}

model Message {
  doc_id         String  @id @default(auto()) @map("_id") @db.ObjectId
  conversationID String  @db.ObjectId
  msgID          Int 
  sender         String
  receiver       String
  msgType        String
  content        String
  createdAt      DateTime

  @@unique([conversationID, msgID(sort: Desc)])
}